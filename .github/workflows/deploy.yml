name: Deploy to Raspberry Pi

on:
  push:
    branches:
      - main  # Trigger the deployment when code is pushed to the main branch
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v2

    # Set up Docker Buildx for building multi-platform images (optional but recommended)
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Build the Docker image
    - name: Build Docker image and Save as tarball
      run: |
        docker buildx build --platform linux/arm64 \
          --build-arg DISCORD_TOKEN=${{ secrets.DISCORD_TOKEN }} \
          --build-arg DISCORD_STREAMING_URL=${{ vars.DISCORD_STREAMING_URL }} \
          -t massacre-card-game-discord-bot --load .
        docker save massacre-card-game-discord-bot -o massacre-card-game-discord-bot.tar

    # Compress the Docker image tarball
    - name: Compress Docker tarball
      run: |
        gzip massacre-card-game-discord-bot.tar

    # Upload the compressed tarball as an artifact
    - name: Upload compressed tarball
      uses: actions/upload-artifact@v3
      with:
        name: massacre-card-game-discord-bot.tar.gz
        path: massacre-card-game-discord-bot.tar.gz

  transfer_and_deploy:
    needs: deploy
    runs-on: ubuntu-latest

    steps:
    # Download the compressed tarball artifact
    - name: Download compressed tarball artifact
      uses: actions/download-artifact@v3
      with:
        name: massacre-card-game-discord-bot.tar.gz

    # Set up SSH to Raspberry Pi
    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.PI_SSH_PRIVATE_KEY }}

    # Add Raspberry Pi's SSH key to known hosts to avoid verification issues
    - name: Add Raspberry Pi SSH key to known hosts
      run: |
        ssh-keyscan -p ${{ vars.PI_PORT }} ${{ secrets.PI_IP }} >> ~/.ssh/known_hosts

    # Transfer the compressed tarball to Raspberry Pi using rsync for better performance
    - name: Transfer compressed tarball to Raspberry Pi
      run: |
        rsync -avz -e "ssh -p ${{ vars.PI_PORT }} -i ~/.ssh/id_rsa" massacre-card-game-discord-bot.tar.gz ${{ vars.PI_USER }}@${{ secrets.PI_IP }}:/home/${{ vars.PI_USER }}

    # SSH into Raspberry Pi to stop old container, load new image, and run the container
    - name: SSH into Raspberry Pi and deploy
      run: |
        ssh -p ${{ vars.PI_PORT }} -i ~/.ssh/id_rsa ${{ vars.PI_USER }}@${{ secrets.PI_IP }} << 'EOF'
          # Stop and remove the old container
          docker stop massacre-card-game-discord-bot || true
          docker rm massacre-card-game-discord-bot || true

          # Load new image from the compressed tarball
          gzip -d /home/${{ vars.PI_USER }}/massacre-card-game-discord-bot.tar.gz
          docker load -i /home/${{ vars.PI_USER }}/massacre-card-game-discord-bot.tar

          # Run the new container
          nohup lxterminal -e "docker run --rm --name massacre-card-game-discord-bot massacre-card-game-discord-bot; if [ \$? -eq 0 ]; then exit; else exec bash; fi" >/dev/null 2>&1 &

          # Clean up tarball
          rm /home/${{ vars.PI_USER }}/massacre-card-game-discord-bot.tar

          # Optionally prune unused Docker resources
          docker system prune -f
        EOF
